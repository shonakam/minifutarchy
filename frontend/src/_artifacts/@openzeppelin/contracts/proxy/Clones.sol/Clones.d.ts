// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface Clones$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "Clones",
  "sourceName": "@openzeppelin/contracts/proxy/Clones.sol",
  "abi": [
    {
      "inputs": [],
      "name": "CloneArgumentsTooLong",
      "type": "error"
    }
  ],
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037dd446d86b9e3df37eea3e0f4a6d805f7dc4238cf393354bf5b14be3c511af064736f6c634300081c0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122037dd446d86b9e3df37eea3e0f4a6d805f7dc4238cf393354bf5b14be3c511af064736f6c634300081c0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "Clones",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<Clones$Type["abi"]>>;
  export function deployContract(
    contractName: "@openzeppelin/contracts/proxy/Clones.sol:Clones",
    constructorArgs?: [],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<Clones$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "Clones",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<Clones$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "@openzeppelin/contracts/proxy/Clones.sol:Clones",
    constructorArgs?: [],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<Clones$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "Clones",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<Clones$Type["abi"]>>;
  export function getContractAt(
    contractName: "@openzeppelin/contracts/proxy/Clones.sol:Clones",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<Clones$Type["abi"]>>;
}
